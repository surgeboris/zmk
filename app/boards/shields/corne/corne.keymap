/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#define L_QWERTY 0
#define L_DVORAK 1
#define L_VOICEOVER 2
#define L_MOUSE 3
#define L_SYM 4
#define L_FN 5
#define L_LAYERNAV 6

#undef ZMK_MOUSE_DEFAULT_MOVE_VAL
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 2500
#undef ZMK_MOUSE_DEFAULT_SCRL_VAL
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 125

#define KEYPOS_H 18
#define KEYPOS_J 19
#define KEYPOS_K 20
#define KEYPOS_L 21
#define KEYPOS_SEMI 22
#define KEYPOS_M 31
#define KEYPOS_N 30
#define KEYPOS_RALT 41

&mmv {
    acceleration-exponent=<1>;
    delay-ms=<0>;
    time-to-max-speed-ms=<500>;
};

&msc {
    acceleration-exponent=<1>;
    delay-ms=<0>;
    time-to-max-speed-ms=<1000>;
};

/ {
        keymap {
                compatible = "zmk,keymap";

                L_QWERTY {
                        bindings = <
    &mt LALT ESC    &kp Q    &kp W    &kp E    &kp R    &kp T    &kp Y    &kp U    &kp I    &kp O    &kp P    &mt LALT BSPC
    &mt LCTRL TAB    &kp A    &kp S    &kp D    &kp F    &kp G    &kp H    &kp J    &kp K    &kp L    &kp SEMI    &mt LCTRL SQT
    &mt LSHFT GRAVE    &kp Z    &kp X    &kp C    &kp V    &kp B    &kp N    &kp M    &kp COMMA    &kp DOT    &kp FSLH    &mt LSHFT RET
    &sl L_LAYERNAV    &lt L_SYM SPACE    &kp LGUI    &tog L_MOUSE    &lt L_FN SPACE    &kp RALT
                        >;
                };

                L_DVORAK {
                        bindings = <
    &trans    &kp SQT    &kp COMMA    &kp DOT    &kp P    &kp Y    &kp F    &kp G    &kp C    &kp R    &kp L    &trans
    &trans    &kp A    &kp O    &kp E    &kp U    &kp I    &kp D    &kp H    &kp T    &kp N    &kp S    &mt LCTRL FSLH
    &trans    &kp SEMI    &kp Q    &kp J    &kp K    &kp X    &kp B    &kp M    &kp W   &kp V    &kp Z    &trans
    &trans    &trans    &trans    &trans    &trans    &trans
                        >;
                };

                L_VOICEOVER {
                        bindings = <
    &mt LALT ESC    &kp Q    &kp W    &kp E    &kp R    &kp T    &kp Y    &kp U    &kp I    &kp O    &kp P    &mt LALT BSPC
    &mt LCTRL TAB    &kp A    &kp S    &kp D    &kp F    &kp G    &kp H    &kp J    &kp K    &kp L    &kp SEMI    &mt LCTRL SQT
    &mt LSHFT GRAVE    &kp Z    &kp X    &kp C    &kp V    &kp B    &kp N    &kp M    &kp COMMA    &kp DOT    &kp FSLH    &mt LSHFT RET
    &to L_QWERTY    &lt L_SYM SPC    &sk LA(LCTRL)    &kp PSCRN    &lt L_FN SPACE    &kp RALT
                        >;
                };

                L_MOUSE {
                        bindings = <
    &trans    &kp C_NEXT    &kp C_BRI_UP    &mkp MB5    &mkp MB4    &mkp MCLK    &msc SCRL_LEFT    &msc SCRL_DOWN    &msc SCRL_UP    &msc SCRL_RIGHT    &kp C_VOL_UP    &trans
    &trans    &kp C_PP    &trans    &trans    &mkp LCLK    &mkp RCLK    &mmv MOVE_LEFT    &mmv MOVE_DOWN    &mmv MOVE_UP    &mmv MOVE_RIGHT    &kp C_MUTE    &mt LCTRL PSCRN
    &trans    &kp C_PREV    &kp C_BRI_DN    &kp C    &kp V    &kp C_MENU    &kp HOME    &kp PG_DN    &kp PG_UP    &kp END    &kp C_VOL_DN    &trans
    &trans    &trans    &trans    &to L_QWERTY    &trans    &trans
                        >;
                };

                L_SYM {
                        bindings = <
    &trans    &kp N1    &kp N2    &kp N3    &kp N4    &kp N5    &kp N6    &kp N7    &kp N8    &kp N9    &kp N0  &mt LALT DEL
    &trans    &kp UNDER    &kp FSLH    &kp MINUS    &kp EQUAL    &kp PLUS    &kp BSLH    &kp LPAR    &kp RPAR    &kp LBRC    &kp RBRC    &trans
    &trans    &kp EXCL    &kp AT    &kp HASH    &kp DLLR    &kp PRCNT    &kp CARET    &kp AMPS    &kp ASTRK    &kp LBKT    &kp RBKT    &trans
    &trans    &trans    &trans    &trans    &trans    &trans
                        >;
                };

                L_FN {
                        bindings = <
    &mt LALT F1    &kp F2    &kp F3    &kp F4    &kp F5    &kp F6    &kp F7    &kp F8    &kp F9    &kp F10    &kp F11  &mt LALT F12
    &mt LCTRL INS    &kp LG(N1)    &kp LG(N2)    &kp LG(N3)    &kp LG(N4)    &kp LG(N5)    &kp LEFT    &kp DOWN    &kp UP    &kp RIGHT    &kp LC(HOME)    &mt LCTRL INS
    &mt LSHFT PAUSE_BREAK    &kp LG(N6)    &kp LG(N7)    &kp LG(N8)    &kp LG(N9)    &kp LG(N0)    &kp LC(LEFT)    &kp HOME    &kp END    &kp LC(RIGHT)    &kp LC(END)    &mt LSHFT PAUSE_BREAK
    &trans    &trans    &kp LC(LA(DEL))    &kp LG(LC(LS(LA(M))))    &trans    &kp LC(LA(INS))
                        >;
                };

                L_LAYERNAV {
                        bindings = <
    &sk LALT    &kp LNLCK    &none    &none    &none    &none    &none    &none    &none    &none    &sk LC(LS(LALT))    &sk LC(LSHFT)
    &sk LCTRL    &kp CLCK    &none    &none    &none    &none    &none    &none    &none    &to L_VOICEOVER    &sk LGUI    &sk LS(LALT)
    &sk LSHFT    &kp SLCK    &none    &none    &none    &none    &none    &none    &none    &none    &sk LG(LC(LS(LALT)))    &sk LC(LALT)
    &to L_QWERTY    &to L_SYM    &to L_DVORAK    &to L_MOUSE    &to L_FN    &none
                        >;
                };

        };

        combos {
               compatible = "zmk,combos";
               combo_bt_clr {
                         timeout-ms = <50>;
                         key-positions = <KEYPOS_RALT KEYPOS_H>;
                         layers = <L_LAYERNAV>;
                         bindings = <&bt BT_CLR>;
               };
               combo_bt_1 {
                         timeout-ms = <50>;
                         key-positions = <KEYPOS_RALT KEYPOS_J>;
                         layers = <L_LAYERNAV>;
                         bindings = <&bt BT_SEL 0>;
               };
               combo_bt_2 {
                         timeout-ms = <50>;
                         key-positions = <KEYPOS_RALT KEYPOS_K>;
                         layers = <L_LAYERNAV>;
                         bindings = <&bt BT_SEL 1>;
               };
               combo_bt_3 {
                         timeout-ms = <50>;
                         key-positions = <KEYPOS_RALT KEYPOS_L>;
                         layers = <L_LAYERNAV>;
                         bindings = <&bt BT_SEL 2>;
               };
               combo_bt_4 {
                         timeout-ms = <50>;
                         key-positions = <KEYPOS_RALT KEYPOS_SEMI>;
                         layers = <L_LAYERNAV>;
                         bindings = <&bt BT_SEL 3>;
               };
               combo_bt_5 {
                         timeout-ms = <50>;
                         key-positions = <KEYPOS_RALT KEYPOS_M>;
                         layers = <L_LAYERNAV>;
                         bindings = <&bt BT_SEL 4>;
               };
               combo_bt_out {
                         timeout-ms = <50>;
                         key-positions = <KEYPOS_RALT KEYPOS_N>;
                         layers = <L_LAYERNAV>;
                         bindings = <&out OUT_TOG>;
               };
        };
};
